============================= test session starts =============================
platform win32 -- Python 3.13.7, pytest-8.4.2, pluggy-1.6.0
rootdir: C:\Users\jooth\Desktop\Projects
plugins: anyio-4.10.0, langsmith-0.4.15
collected 8 items

AutoAlgo\src\problems\shortest_path\tests\test_shortest_path.py ..F...F. [100%]

================================== FAILURES ===================================
____________________________ test_start_equals_end ____________________________

find_shortest_path_func = <function find_shortest_path at 0x00000264A52B84A0>
sample_graph = {'A': {'B': 1, 'C': 4}, 'B': {'C': 2, 'D': 5}, 'C': {'D': 1}, 'D': {'E': 2}, ...}

    def test_start_equals_end(find_shortest_path_func, sample_graph):
        """Tests when the start and end nodes are the same."""
        cost, path = find_shortest_path_func(sample_graph, 'A', 'A')
        assert cost == 0
>       assert path == ['A']
E       AssertionError: assert [] == ['A']
E         
E         Right contains one more item: 'A'
E         Use -v to get more diff

AutoAlgo\src\problems\shortest_path\tests\test_shortest_path.py:72: AssertionError
____________________________ test_negative_weights ____________________________

find_shortest_path_func = <function find_shortest_path at 0x00000264A52B84A0>

    def test_negative_weights(find_shortest_path_func):
        """
        Tests a graph with negative weights. Dijkstra's is not expected to work
        correctly here, so this tests if an algorithm can handle it or fails gracefully.
        A correct implementation (like Bellman-Ford) would find the path.
        """
        graph = {
            'A': {'B': 1, 'C': 2},
            'B': {},
            'C': {'D': 1},
            'D': {'B': -3}
        }
        # Correct path to B is A->C->D->B with cost 2+1-3=0
        # Dijkstra will find A->B with cost 1
        cost, path = find_shortest_path_func(graph, 'A', 'B')
>       assert cost == 0
E       assert 1 == 0

AutoAlgo\src\problems\shortest_path\tests\test_shortest_path.py:122: AssertionError
=========================== short test summary info ===========================
FAILED AutoAlgo/src/problems/shortest_path/tests/test_shortest_path.py::test_start_equals_end
FAILED AutoAlgo/src/problems/shortest_path/tests/test_shortest_path.py::test_negative_weights
========================= 2 failed, 6 passed in 0.10s =========================

